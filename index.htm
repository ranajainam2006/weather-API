<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Weather Finder</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(to right, #112996, #91ae81);
      color: white;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: 'Segoe UI', sans-serif;
    }
    .weather-container {
      background: rgba(5, 3, 3, 0.691);
      border-radius: 20px;
      padding: 40px;
      max-width: 500px;
      width: 100%;
      backdrop-filter: blur(10px);
      box-shadow:  40px 50px rgba(240, 240, 240, 0.2);
    }
    
    .weather-container input {
      border-radius: 10px;
      font-size: 1.2rem;
    }
    .weather-container button {
      border-radius: 10px;
      font-size: 1.1rem;
    }
    .card-result {
      background: rgba(255, 255, 255, 0.15);
      border: none;
      border-radius: 20px;
      margin-top: 30px;
      padding: 25px;
      color: white;
    }
    .card-result h3 {
      margin-bottom: 5px;
    }
    .card-result p {
      margin-bottom: 8px;
    }
    .weather-emoji {
      font-size: 2.2rem;
    }
  </style>
</head>
<body>
  
  <div class="weather-container text-center">
    <h2 class="fw-bold mb-4"> Real-Time Weather</h2>
    <div class="input-group mb-3 shadow">
      <input type="text" id="cityInput" class="form-control" placeholder="Enter city (e.g. London)">
      <button class="btn btn-success" id="searchBtn">Search</button>
    </div>

    <div id="showweather"></div>
  </div>

  <script>
    const searchBtn = document.getElementById('searchBtn');
    const cityInput = document.getElementById('cityInput');
    const output = document.getElementById('showweather');
    const apiKey = "c98cecfe61fa7283cec5ee9cad935366";

    async function fetchWeatherByCity(cityName) {
      if (!cityName.trim()) {
        output.innerHTML = '<p class="text-danger">Please enter a city name.</p>';
        return;
      }

      try {
        const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(cityName)}&appid=${apiKey}&units=metric`;
        const res = await fetch(url);
        const data = await res.json();

        if (data.cod !== 200) {
          output.innerHTML = `<p class="text-warning mt-3">‚ùå${data.message}</p>`;
          return;
        }

        const city = data.name;
        const country = data.sys.country;
        const temp = data.main.temp;
        const feelsLike = data.main.feels_like;
        const humidity = data.main.humidity;
        const wind = data.wind.speed;
        const condition = data.weather[0].main;
        const icon = data.weather[0].icon;

        const card = `
          <div class="card-result text-start text-light">
            <h3>${city}, ${country} üåç</h3>
            <hr class="border-white">
            <p class="weather-emoji mb-1">
              <img src="https://openweathermap.org/img/wn/${icon}@2x.png" alt="${condition}" style="width:50px;vertical-align:middle;">
              ${condition}
            </p>
            <p>üå°Ô∏è Temperature: <strong>${temp}¬∞C</strong></p>
            <p>ü§í Feels Like: <strong>${feelsLike}¬∞C</strong></p>
            <p>üíß Humidity: <strong>${humidity}%</strong></p>
            <p>üå¨Ô∏è Wind Speed: <strong>${wind} m/s</strong></p>
          </div>
        `;
        output.innerHTML = card;

      } catch (err) {
        console.error('Error:', err);
        output.innerHTML = `<p class="text-danger mt-3">‚ö†Ô∏è Could not fetch weather. Please try again.</p>`;
      }
    }

    searchBtn.addEventListener('click', () => {
      fetchWeatherByCity(cityInput.value);
    });

    cityInput.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') fetchWeatherByCity(cityInput.value);
    });
  </script>
</body>
</html>


